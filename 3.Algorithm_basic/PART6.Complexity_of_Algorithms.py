 # 알고리즘의 복잡도
 # 시간 복잡도 : 문제의 크기와 이를 해결하는 데 걸리는 시간 사이의 관계
 # 공간 복잡도 : 문제의 크기와 이를 해결하는 데 필요한 메모리 공간 사이의 관계

 # 평균 시간 복잡도
 # - 임의의 입력 패턴을 가정했을 때 소요되는 시간의 평균

 # 최악 시간 복잡도
 # - 가장 긴 시간을 소요하게 만드는 입력에 따라 소요되는 시간

 # Big-O Notation
 # 점근표기법(asymptotic notation)의 하나
 # 어떤 함수의 증가 양상을 다른 함수와의 비교로 표현(알고리즘의 복잡도 표현)
 # O(logn), O(n), O(n^2), O(2^n) ...
 # -> 입력의 크기가 n 일때, 입력의 크기에 (logn, n, n^2...)에 비례하는 시간이 소요된다는 것

 #-----------------------------------------------------------------------------#
 # 선형 시간 알고리즘 - O(n)
 # 예: n개의 무작위로 나열된 수에서 최댓값을 찾기 위해 선형 탐색 알고리즘을 적용
 # 실행시간은 n에 비례하는 시간이 걸리겠지.(하나하나 다 살펴봐야하기 때문에 Average case, Worst-case 복잡도 모두 O(n))

#-----------------------------------------------------------------------------#
# 로그 시간 알고리즘 - O(logn)
# 예: n개의 크기 순으로 정렬된 수에서 특정 값을 찾기위해 '이진탐색알고리즘'적용

#-----------------------------------------------------------------------------#
# 이차 시간 알고리즘 - O(n^2)
# 예: 삽입정렬(insertion sort) -> Best case: O(n), Worst case: O(n^2)
